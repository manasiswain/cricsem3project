{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\manzo\\\\Coding\\\\WebDev\\\\livescore\\\\livescore\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\n// import logo from './logo.svg';\nimport './App.css';\nimport { AppBar, Button, Grid, Typography } from '@material-ui/core';\nimport Navbar from './components/Navbar';\nimport MyCard from './components/MyCard';\nimport { getMatches } from \"./api/Api\";\nimport { Fragment, useEffect, useState } from 'react'; // the following are, again, my changes\n// import {transfermatchesintofile} from './mongodb/db'\n\nvar MongoClient = require('mongodb').MongoClient;\n\nvar url = \"mongodb://localhost:3000/\";\n\nconst http = require('http');\n\nconst hostname = '127.0.0.1';\nconst port = 3000; // var exportval;\n// function for mongodb, to insert things into the database\n\nMongoClient.connect(url, function (err, db) {\n  if (err) throw err;\n  var cricketdatabase = db.db(\"cricdatabase\"); // matches = exportval;\n  // if (matches) insertintodatabase (cricketdatabase, matches, db);\n  // this call should instead be replaced\n  // the following is a search function, so you can potentially filter matches by team name?\n  // perhaps?\n  //   dbo.collection(\"customers\").find({}).toArray( function(err, result) {\n  //     if (err) throw err;\n  //     console.log(result);\n  //     db.close();\n  //   });\n});\n\nfunction insertintodatabase(cricketdatabase, matches, db) {\n  cricketdatabase.collection(\"matches\").insertOne(matches, function (err, res) {\n    if (err) throw err;\n    console.log(\"The matches have been inserted\");\n    db.close();\n  });\n}\n\nfunction App() {\n  _s();\n\n  const [matches, setMatches] = useState([]);\n  useEffect(() => {\n    getMatches().then(data => {\n      setMatches(data.matches); // these are the changed I've made... Everything works well, so far\n      // so maybe over here?\n      // transfermatchesintofile(data.matches);\n\n      console.log(\"This is the data \\n\", typeof data, \"\\n\", data); // exportval = data.matches;\n      // export {exportval};\n    }).catch(error => alert(\"Unable to load\"));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h3\",\n      color: \"primary\",\n      style: {\n        marginTop: 20\n      },\n      children: \"LIVE CRICKET SCORE\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        sm: \"2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        sm: \"8\",\n        children: matches.map(match => /*#__PURE__*/_jsxDEV(Fragment, {\n          children: match.type === \"Twenty20\" ? /*#__PURE__*/_jsxDEV(MyCard, {\n            match: match\n          }, match.unique_id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 17\n          }, this) // should probably call the function to store details about the match over here\n          : \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 12\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"YhlcfFikU4Xnm4DkUW695+Zqf6o=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/manzo/Coding/WebDev/livescore/livescore/src/App.js"],"names":["AppBar","Button","Grid","Typography","Navbar","MyCard","getMatches","Fragment","useEffect","useState","MongoClient","require","url","http","hostname","port","connect","err","db","cricketdatabase","insertintodatabase","matches","collection","insertOne","res","console","log","close","App","setMatches","then","data","catch","error","alert","marginTop","map","match","type","unique_id"],"mappings":"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","sourcesContent":["// import logo from './logo.svg';\r\nimport './App.css';\r\nimport { AppBar, Button, Grid, Typography } from '@material-ui/core';\r\nimport Navbar from './components/Navbar';\r\nimport MyCard from './components/MyCard';\r\nimport {getMatches} from \"./api/Api\";\r\nimport {Fragment, useEffect, useState} from 'react';\r\n\r\n// the following are, again, my changes\r\n// import {transfermatchesintofile} from './mongodb/db'\r\nvar MongoClient = require('mongodb').MongoClient;\r\nvar url = \"mongodb://localhost:3000/\";\r\n\r\nconst http = require('http');\r\nconst hostname = '127.0.0.1';\r\nconst port = 3000;\r\n// var exportval;\r\n\r\n\r\n// function for mongodb, to insert things into the database\r\nMongoClient.connect(url, function(err, db) {\r\n  if (err) throw err;\r\n  var cricketdatabase = db.db(\"cricdatabase\")\r\n\r\n  // matches = exportval;\r\n  // if (matches) insertintodatabase (cricketdatabase, matches, db);\r\n  // this call should instead be replaced\r\n\r\n\r\n  // the following is a search function, so you can potentially filter matches by team name?\r\n  // perhaps?\r\n//   dbo.collection(\"customers\").find({}).toArray( function(err, result) {\r\n//     if (err) throw err;\r\n//     console.log(result);\r\n//     db.close();\r\n//   });\r\n});\r\n\r\nfunction insertintodatabase(cricketdatabase, matches, db) {\r\n    cricketdatabase.collection(\"matches\").insertOne(matches, function (err, res) {\r\n        if (err)\r\n            throw err;\r\n        console.log(\"The matches have been inserted\");\r\n        db.close();\r\n    });\r\n}\r\n\r\n\r\n\r\n\r\n\r\nfunction App() { \r\n const [matches, setMatches] = useState([]);\r\n  useEffect(() => {\r\n    getMatches()\r\n    .then((data)=> {\r\n      setMatches(data.matches)\r\n// these are the changed I've made... Everything works well, so far\r\n      // so maybe over here?\r\n      // transfermatchesintofile(data.matches);\r\n      console.log(\"This is the data \\n\", typeof(data), \"\\n\", data);\r\n      // exportval = data.matches;\r\n      // export {exportval};\r\n    })\r\n    .catch(error=> alert(\"Unable to load\"));\r\n  },[]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Navbar></Navbar>\r\n      <Typography variant=\"h3\" color=\"primary\" style={{marginTop:20}}>\r\n        LIVE CRICKET SCORE\r\n      </Typography>\r\n      <Grid container>\r\n        <Grid sm=\"2\"></Grid>\r\n        <Grid sm=\"8\">\r\n         {matches.map((match) =>(\r\n           <Fragment>\r\n             {match.type === \"Twenty20\"?(\r\n                <MyCard key={match.unique_id} match ={match} />\r\n                // should probably call the function to store details about the match over here\r\n             ) : (\r\n               \"\"\r\n             )}\r\n           </Fragment>\r\n          ))}\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}