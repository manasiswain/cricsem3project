{"ast":null,"code":"var express = require('express');\n\nvar router = express.Router();\n\nvar mongo = require('mongodb');\n\nvar assert = require('assert'); // router.get('/', function(req, res, next) {\n//     res.render('index');\n// });\n\n\nvar url = 'mongodb://localhost:27017/test';\nrouter.get('/get-data', function (req, res, next) {\n  var resultArray = [];\n  mongo.connect(url, function (err, db) {\n    assert(null, err);\n    var cursor = db.collection('Match-Scores').find();\n    cursor.forEach(function (doc, err) {\n      assert(null, err);\n      resultArray.push(doc);\n    }, function () {\n      db.close();\n      res.render('index', {\n        items: resultArray\n      });\n    });\n  });\n});\nrouter.post('/insert', function (req, res, next) {\n  var item = {\n    description: req.body.description,\n    score: req.body.score,\n    stat: req.body.stat,\n    team1: req.body.team - 1,\n    team2: req.body.team - 2\n  };\n  mongo.connect(url, function (err, db) {\n    db.collection('Match-Scores').insertOne(item, function (err, result) {\n      assert(err, null);\n      console.log(\"Item has been inserted\\n\");\n      db.close();\n    });\n  });\n  res.redirect('/');\n});\nrouter.post('/update', function (req, res, next) {});\nrouter.post('/delete', function (req, res, next) {});","map":{"version":3,"sources":["C:/Users/manzo/Coding/WebDev/livescore/livescore/src/mongodb/accessdb.js"],"names":["express","require","router","Router","mongo","assert","url","get","req","res","next","resultArray","connect","err","db","cursor","collection","find","forEach","doc","push","close","render","items","post","item","description","body","score","stat","team1","team","team2","insertOne","result","console","log","redirect"],"mappings":"AAAA,IAAIA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAArB;;AACA,IAAIC,MAAM,GAAGF,OAAO,CAACG,MAAR,EAAb;;AACA,IAAIC,KAAK,GAAGH,OAAO,CAAC,SAAD,CAAnB;;AACA,IAAII,MAAM,GAAGJ,OAAO,CAAC,QAAD,CAApB,C,CAEA;AACA;AACA;;;AAEA,IAAIK,GAAG,GAAG,gCAAV;AAEAJ,MAAM,CAACK,GAAP,CAAW,WAAX,EAAwB,UAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyB;AAC7C,MAAIC,WAAW,GAAG,EAAlB;AACAP,EAAAA,KAAK,CAACQ,OAAN,CAAcN,GAAd,EAAmB,UAASO,GAAT,EAAcC,EAAd,EAAkB;AACjCT,IAAAA,MAAM,CAAC,IAAD,EAAOQ,GAAP,CAAN;AACA,QAAIE,MAAM,GAAGD,EAAE,CAACE,UAAH,CAAc,cAAd,EAA8BC,IAA9B,EAAb;AACAF,IAAAA,MAAM,CAACG,OAAP,CAAe,UAASC,GAAT,EAAcN,GAAd,EAAmB;AAC9BR,MAAAA,MAAM,CAAC,IAAD,EAAOQ,GAAP,CAAN;AACAF,MAAAA,WAAW,CAACS,IAAZ,CAAiBD,GAAjB;AACH,KAHD,EAGG,YAAW;AACVL,MAAAA,EAAE,CAACO,KAAH;AACAZ,MAAAA,GAAG,CAACa,MAAJ,CAAW,OAAX,EAAoB;AAACC,QAAAA,KAAK,EAAEZ;AAAR,OAApB;AACH,KAND;AAOH,GAVD;AAWH,CAbD;AAeAT,MAAM,CAACsB,IAAP,CAAY,SAAZ,EAAuB,UAAUhB,GAAV,EAAeC,GAAf,EAAoBC,IAApB,EAA0B;AAC7C,MAAIe,IAAI,GAAG;AACPC,IAAAA,WAAW,EAAElB,GAAG,CAACmB,IAAJ,CAASD,WADf;AAEPE,IAAAA,KAAK,EAAEpB,GAAG,CAACmB,IAAJ,CAASC,KAFT;AAGPC,IAAAA,IAAI,EAAErB,GAAG,CAACmB,IAAJ,CAASE,IAHR;AAIPC,IAAAA,KAAK,EAAEtB,GAAG,CAACmB,IAAJ,CAASI,IAAT,GAAc,CAJd;AAKPC,IAAAA,KAAK,EAAExB,GAAG,CAACmB,IAAJ,CAASI,IAAT,GAAc;AALd,GAAX;AAQA3B,EAAAA,KAAK,CAACQ,OAAN,CAAcN,GAAd,EAAmB,UAASO,GAAT,EAAcC,EAAd,EAAkB;AACjCA,IAAAA,EAAE,CAACE,UAAH,CAAe,cAAf,EAA+BiB,SAA/B,CAAyCR,IAAzC,EAA+C,UAASZ,GAAT,EAAcqB,MAAd,EAAsB;AACjE7B,MAAAA,MAAM,CAACQ,GAAD,EAAM,IAAN,CAAN;AACAsB,MAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACAtB,MAAAA,EAAE,CAACO,KAAH;AACH,KAJD;AAKH,GAND;AAQAZ,EAAAA,GAAG,CAAC4B,QAAJ,CAAa,GAAb;AACH,CAlBD;AAoBAnC,MAAM,CAACsB,IAAP,CAAY,SAAZ,EAAuB,UAAUhB,GAAV,EAAeC,GAAf,EAAoBC,IAApB,EAA0B,CAEhD,CAFD;AAIAR,MAAM,CAACsB,IAAP,CAAY,SAAZ,EAAuB,UAAUhB,GAAV,EAAeC,GAAf,EAAoBC,IAApB,EAA0B,CAEhD,CAFD","sourcesContent":["var express = require('express');\r\nvar router = express.Router();\r\nvar mongo = require('mongodb');\r\nvar assert = require('assert');\r\n\r\n// router.get('/', function(req, res, next) {\r\n//     res.render('index');\r\n// });\r\n\r\nvar url = 'mongodb://localhost:27017/test';\r\n\r\nrouter.get('/get-data', function(req, res, next) {\r\n    var resultArray = [];\r\n    mongo.connect(url, function(err, db) {\r\n        assert(null, err);\r\n        var cursor = db.collection('Match-Scores').find();\r\n        cursor.forEach(function(doc, err) {\r\n            assert(null, err);\r\n            resultArray.push(doc);\r\n        }, function() {\r\n            db.close();\r\n            res.render('index', {items: resultArray});\r\n        });\r\n    });\r\n});\r\n\r\nrouter.post('/insert', function (req, res, next) {\r\n    var item = {\r\n        description: req.body.description,\r\n        score: req.body.score,\r\n        stat: req.body.stat,\r\n        team1: req.body.team-1,\r\n        team2: req.body.team-2,\r\n    }\r\n\r\n    mongo.connect(url, function(err, db) {\r\n        db.collection ('Match-Scores').insertOne(item, function(err, result) {\r\n            assert(err, null);\r\n            console.log(\"Item has been inserted\\n\");\r\n            db.close();\r\n        });\r\n    });\r\n\r\n    res.redirect('/');\r\n});\r\n\r\nrouter.post('/update', function (req, res, next) {\r\n\r\n});\r\n\r\nrouter.post('/delete', function (req, res, next) {\r\n\r\n});\r\n"]},"metadata":{},"sourceType":"module"}